"use client";
import CardTools from "@/components/card/cardTools";
import * as Uil from "@iconscout/react-unicons";
import { useEffect, useState } from "react";

function CSR() {
  const [state, setState] = useState({
    targets: [""],
    postfile: "",
  });
  const [isDisabled, setIsDisabled] = useState(true);

  useEffect(() => {
    const isValid = state.targets.every((target) => target.startsWith("https://") || target.startsWith("http://") || target === "") && state.postfile !== "" && state.targets.length > 0 && Array.isArray(state.targets);

    setIsDisabled(!isValid);
  }, [state]);

  const handleTargetChange = (index, value) => {
    const updatedTargets = [...state.targets];
    updatedTargets[index] = value;
    setState({ ...state, targets: updatedTargets });
  };

  return (
    <CardTools title="Mass CSRF Online" description="CSRF Online tools for multiple targets.">
      <div className="form-control p-1 md:p-4 flex flex-col gap-4 w-full">
        {state.targets.map((target, index) => (
          <label key={index} className="input input-bordered flex items-center gap-2 w-full">
            <Uil.UilLinkH size="16px" className="h-4 w-4 opacity-70" />
            <input type="text" className="grow w-full" value={target} onChange={(e) => handleTargetChange(index, e.target.value)} placeholder={`https://localhost/ (Target ${index + 1})`} required />
          </label>
        ))}
        <button type="button" className="btn btn-secondary" onClick={() => setState({ ...state, targets: [...state.targets, ""] })}>
          + Target
        </button>
      </div>
      {state.targets.map((target, index) => (
        <form key={index} action={target} method="post" encType="multipart/form-data" target="_blank" className="p-1 md:p-4 flex flex-col gap-4 w-full">
          <div className="form-control w-full">
            <label className="form-control w-full">
              <div className="label">
                <span className="label-text text-sm">POST FILE:</span>
              </div>
              <input type="text" placeholder="Filedata / files[] / qqfile / userfile / dll" className="input input-bordered w-full" value={state.postfile} onChange={(e) => setState({ ...state, postfile: e.target.value })} required />
            </label>
          </div>

          <div className="form-control w-full">
            <input type="file" name={state.postfile} className="file-input file-input-bordered file-input-md w-full" disabled={isDisabled} />
          </div>
          <div className="form-control mt-6">
            <button type="submit" name="submit" value="submit" className={`btn ${isDisabled ? "btn-disabled" : "btn-primary"} w-full`} disabled={isDisabled}>
              GO! (Target {index + 1})
            </button>
          </div>
        </form>
      ))}
    </CardTools>
  );
}

export default CSR;
